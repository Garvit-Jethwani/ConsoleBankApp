// ********RoostGPT********
// Test generated by RoostGPT for test csharp-test using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using System;
using NUnit.Framework;
using Moq;

namespace Core.Test
{
    [TestFixture]
    public class Homepage_WriteLine_4253fa5afd
    {
        private Mock<IRepository> _repMock;
        private Program _testProgram;

        [SetUp]
        public void Setup()
        {
            _repMock = new Mock<IRepository>();
            _testProgram = new Program(_repMock.Object);
        }

        [Test]
        public void Run_WhenChoiceIs1_ExpectSignUpCalled()
        {
            // Arrange
            Console.SetIn(new StringReader("1"));

            // Act
            _testProgram.Run();

            // Assert
            _repMock.Verify(x => x.SignUp(), Times.Once);
        }

        [Test]
        public void Run_WhenChoiceIs2_ExpectLoginCalled()
        {
            // Arrange
            Console.SetIn(new StringReader("2"));

            // Act
            _testProgram.Run();

            // Assert
            _repMock.Verify(x => x.Login(), Times.Once);
        }

        [Test]
        public void Run_WhenChoiceIs3_ExpectExit()
        {
            // Arrange
            Console.SetIn(new StringReader("3"));

            // Act
            try
            {
                _testProgram.Run();
            }
            catch (SystemExitException)
            {
                // Assert
                Assert.Pass();
            }

            Assert.Fail("Expected SystemExitException not thrown.");
        }

        [Test]
        public void Run_WhenChoiceIsInvalid_ExpectRecursion()
        {
            // Arrange
            Console.SetIn(new StringReader("invalid\n1"));

            // Act
            _testProgram.Run();

            // Assert
            _repMock.Verify(x => x.SignUp(), Times.Once);
        }

        [TearDown]
        public void TearDown()
        {
            _repMock = null;
            _testProgram = null;
        }
    }
}
