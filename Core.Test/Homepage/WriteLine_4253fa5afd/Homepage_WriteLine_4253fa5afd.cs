// ********RoostGPT********
// Test generated by RoostGPT for test csharp-test using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using System;
using System.IO;
using NUnit.Framework;
using Moq;

namespace Core.Test
{
    public interface IRepository
    {
        void SignUp();
        void Login();
    }

    public class Program
    {
        private readonly IRepository _repository;

        public Program(IRepository repository)
        {
            _repository = repository;
        }

        public void Run()
        {
            var choice = Console.ReadLine();

            switch (choice)
            {
                case "1":
                    _repository.SignUp();
                    break;
                case "2":
                    _repository.Login();
                    break;
                case "3":
                    throw new InvalidOperationException();
                default:
                    Run();
                    break;
            }
        }
    }

    [TestFixture]
    public class Homepage_WriteLine_4253fa5afd
    {
        private Mock<IRepository> _repMock;
        private Program _testProgram;

        [SetUp]
        public void Setup()
        {
            _repMock = new Mock<IRepository>();
            _testProgram = new Program(_repMock.Object);

            Console.SetIn(new StringReader("1"));
            Console.SetOut(new StringWriter());
        }

        [Test]
        public void Run_SignUpChoice_CallsSignUp()
        {
            _testProgram.Run();

            _repMock.Verify(rep => rep.SignUp(), Times.Once);
        }

        [Test]
        public void Run_LoginChoice_CallsLogin()
        {
            Console.SetIn(new StringReader("2"));

            _testProgram.Run();

            _repMock.Verify(rep => rep.Login(), Times.Once);
        }

        [Test]
        public void Run_ExitChoice_ExitsProgram()
        {
            Console.SetIn(new StringReader("3"));

            Assert.Throws<InvalidOperationException>(() => _testProgram.Run());
        }

        [Test]
        public void Run_InvalidChoice_RunsAgain()
        {
            Console.SetIn(new StringReader("4\n1"));

            _testProgram.Run();

            _repMock.Verify(rep => rep.SignUp(), Times.Once);
        }
    }
}
