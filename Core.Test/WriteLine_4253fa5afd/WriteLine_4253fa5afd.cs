// ********RoostGPT********
// Test generated by RoostGPT for test csharp-test using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using NUnit.Framework;
using System;
using System.IO;
using Moq; // Add this for Mock<>
using Core.Services; // Make sure IRepository exists in this namespace

namespace Core.Test
{
    [TestFixture]
    public class WriteLine_4253fa5afd
    {
        private StringWriter _stringWriter;
        private TextWriter _originalOutput;

        [SetUp]
        public void SetUp()
        {
            _stringWriter = new StringWriter();
            _originalOutput = Console.Out;
            Console.SetOut(_stringWriter);
        }

        [TearDown]
        public void TearDown()
        {
            Console.SetOut(_originalOutput);
            _stringWriter.Dispose();
        }

        [Test]
        public void Run_WithChoice1_CallsSignUp()
        {
            // Arrange
            var mockRep = new Mock<IRepository>();
            var program = new Program(mockRep.Object); // Make sure Program class is public
            Console.SetIn(new StringReader("1\n"));

            // Act
            program.Run();

            // Assert
            mockRep.Verify(rep => rep.SignUp(), Times.Once); // Make sure SignUp() method is virtual or abstract
        }

        [Test]
        public void Run_WithChoice2_CallsLogin()
        {
            // Arrange
            var mockRep = new Mock<IRepository>();
            var program = new Program(mockRep.Object); // Make sure Program class is public
            Console.SetIn(new StringReader("2\n"));

            // Act
            program.Run();

            // Assert
            mockRep.Verify(rep => rep.Login(), Times.Once); // Make sure Login() method is virtual or abstract
        }

        [Test]
        public void Run_WithInvalidChoice_ReturnsErrorMessage()
        {
            // Arrange
            var mockRep = new Mock<IRepository>();
            var program = new Program(mockRep.Object); // Make sure Program class is public
            Console.SetIn(new StringReader("4\n"));

            // Act
            program.Run();
            var output = _stringWriter.ToString();

            // Assert
            Assert.IsTrue(output.Contains("You have entered an invalid Message"));
        }
    }
}
